apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: revolutio-ingress-acies
  annotations:
    #kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt1
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/limit-connections: "20"
    nginx.ingress.kubernetes.io/limit-rps: "200"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - acies.cloud
    - "*.acies.cloud"
    secretName: wildcard1
  rules:
  - host: acies.cloud
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: django
            port:
              number: 80
  - host: "*.acies.cloud"
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: django
            port:
              number: 80
  - host: acies.cloud
    http:
      paths:
      - path: /ws/
        pathType: Prefix
        backend:
          service:
            name: django
            port:
              number: 80
  - host: "*.acies.cloud"
    http:
      paths:
      - path: /ws/
        pathType: Prefix
        backend:
          service:
            name: django
            port:
              number: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: revolutio-static-ingress-acies
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /static/$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt1
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/limit-connections: "200"
    nginx.ingress.kubernetes.io/limit-rps: "200"
spec:
  tls:
  - hosts:
    - acies.cloud
    secretName: wildcard1
  rules:
  - host: acies.cloud
    http:
      paths:
      - path: /static(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: django
            port:
              number: 80
  - host: "*.acies.cloud"
    http:
      paths:
      - path: /static(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: django
            port:
              number: 80
