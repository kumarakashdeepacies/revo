ARG REVOLUTIO_VERSION="1.0.0"

ARG REVOLUTIO_HOME=/opt/revolutio
ARG REVOLUTIO_UID="70070"

ARG PYTHON_BASE_IMAGE="python:3.11.8-slim-bookworm"

ARG REVOLUTIO_PIP_VERSION=24.0

# By default PIP has progress bar but you can disable it.
ARG PIP_PROGRESS_BAR="on"

##############################################################################################
# This is the build image where we build all dependencies
##############################################################################################
FROM ${PYTHON_BASE_IMAGE} as revolutio-build-image
SHELL ["/bin/bash", "-o", "pipefail", "-e", "-u", "-x", "-c"]

ARG PYTHON_BASE_IMAGE
ENV PYTHON_BASE_IMAGE=${PYTHON_BASE_IMAGE} \
    DEBIAN_FRONTEND=noninteractive LANGUAGE=C.UTF-8 LANG=C.UTF-8 LC_ALL=C.UTF-8 \
    LC_CTYPE=C.UTF-8 LC_MESSAGES=C.UTF-8

# Install curl and gnupg2 - needed for many other installation steps
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
           curl \
           gnupg2 \
    && apt-get autoremove -yqq --purge \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ARG DEV_APT_DEPS="\
     apt-transport-https \
     apt-utils \
     git \
     libboost-all-dev \
     build-essential \
     ca-certificates \
     gnupg \
     gnupg1 \
     dirmngr \
     ldap-utils \
     libffi-dev \
     libkrb5-dev \
     libldap2-dev \
     libpq-dev \
     libsasl2-2 \
     libsasl2-dev \
     libsasl2-modules \
     libssl-dev \
     locales  \
     lsb-release \
     openssh-client \
     sasl2-bin \
     software-properties-common \
     sudo \
     unixodbc \
     unixodbc-dev \
     gcc \
     python3-selinux \
     g++ \
     pkg-config \
     libxmlsec1 \
     libxmlsec1-dev \
     libxml2-dev \
     libxmlsec1-openssl \
     make \
     libgl1-mesa-glx \
     cmake \
     chromium \
     libpangocairo-1.0-0 \
     alien \
     libaio1 \
     libgomp1"

ARG ADDITIONAL_DEV_APT_DEPS=""
ARG DEV_APT_COMMAND="\
    curl --fail --location https://deb.nodesource.com/setup_20.x | bash - \
    && curl https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - > /dev/null \
    && echo 'deb https://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list"
ARG ADDITIONAL_DEV_APT_COMMAND="echo"
ARG ADDITIONAL_DEV_APT_ENV=""

ENV DEV_APT_DEPS=${DEV_APT_DEPS} \
    ADDITIONAL_DEV_APT_DEPS=${ADDITIONAL_DEV_APT_DEPS} \
    DEV_APT_COMMAND=${DEV_APT_COMMAND} \
    ADDITIONAL_DEV_APT_COMMAND=${ADDITIONAL_DEV_APT_COMMAND} \
    ADDITIONAL_DEV_APT_ENV=${ADDITIONAL_DEV_APT_ENV}

# Note missing man directories on debian-buster
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199
# Install basic and additional apt dependencies
RUN mkdir -pv /usr/share/man/man1 \
    && mkdir -pv /usr/share/man/man7 \
    && export ${ADDITIONAL_DEV_APT_ENV?} \
    && bash -o pipefail -e -u -x -c "${DEV_APT_COMMAND}" \
    && bash -o pipefail -e -u -x -c "${ADDITIONAL_DEV_APT_COMMAND}" \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
           ${DEV_APT_DEPS} \
           ${ADDITIONAL_DEV_APT_DEPS} \
    && apt-get autoremove -yqq --purge \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update \
    && apt-get install -y libxrender-dev

ARG INSTALL_MSSQL_CLIENT="true"
ARG REVOLUTIO_PIP_VERSION
# By default PIP has progress bar but you can disable it.
ARG PIP_PROGRESS_BAR
# By default we do not use pre-cached packages, but in CI/Breeze environment we override this to speed up
# builds in case setup.py/setup.cfg changed. This is pure optimisation of CI/Breeze builds.
ARG REVOLUTIO_PRE_CACHED_PIP_PACKAGES="false"
# This is airflow version that is put in the label of the image build
ARG REVOLUTIO_VERSION
# By default we install providers from PyPI but in case of Breeze build we want to install providers
# from local sources without the need of preparing provider packages upfront. This value is
# automatically overridden by Breeze scripts.
ARG INSTALL_PROVIDERS_FROM_SOURCES="false"

# and we can install version according to specification (For example ==2.0.2 or <3.0.0).
ARG REVOLUTIO_VERSION_SPECIFICATION=""
# By default we do not upgrade to latest dependencies
ARG UPGRADE_TO_NEWER_DEPENDENCIES="false"

ENV INSTALL_MSSQL_CLIENT=${INSTALL_MSSQL_CLIENT} \
    PATH=${PATH}:/root/.local/bin \
    REVOLUTIO_PIP_VERSION=${REVOLUTIO_PIP_VERSION} \
    PIP_PROGRESS_BAR=${PIP_PROGRESS_BAR} \
    REVOLUTIO_INSTALL_USER_FLAG="--user" \
    REVOLUTIO_INSTALL_EDITABLE_FLAG="" \
    UPGRADE_TO_NEWER_DEPENDENCIES=${UPGRADE_TO_NEWER_DEPENDENCIES}

COPY /Installation_ref/scripts/*.sh /Installation_ref/scripts/
RUN bash ./Installation_ref/scripts/install_mssql.sh
ENV PATH=${PATH}:/opt/mssql-tools18/bin

RUN if [[ -f /docker-context-files/.pypirc ]]; then \
        cp /docker-context-files/.pypirc /root/.pypirc; \
    fi

ENV REVOLUTIO_VERSION=${REVOLUTIO_VERSION} \
    REVOLUTIO_VERSION_SPECIFICATION=${REVOLUTIO_VERSION_SPECIFICATION}

RUN bash /Installation_ref/scripts/install_pip_version.sh;

# Add extra python dependencies
ARG ADDITIONAL_PYTHON_DEPS=""

ARG INSTALL_FROM_DOCKER_CONTEXT_FILES=""

ARG INSTALL_FROM_PYPI="true"

ENV INSTALL_FROM_DOCKER_CONTEXT_FILES=${INSTALL_FROM_DOCKER_CONTEXT_FILES} \
    INSTALL_FROM_PYPI=${INSTALL_FROM_PYPI}

WORKDIR /opt/revolutio
COPY . /opt/revolutio

RUN echo 'export CHROMIUM_FLAGS="$CHROMIUM_FLAGS --no-sandbox"' >> /etc/chromium.d/default-flags

# hadolint ignore=SC2086, SC2010
RUN find /root/.local/ -name '*.pyc' -print0 | xargs -0 rm -r || true ; \
    find /root/.local/ -type d -name '__pycache__' -print0 | xargs -0 rm -r || true ; \
    # make sure that all directories and files in .local are also group accessible
    find /root/.local -executable -print0 | xargs --null chmod g+x; \
    find /root/.local -print0 | xargs --null chmod g+rw

# It is recommended that
# the requirements.txt contains only dependencies with == version specification
RUN --mount=type=cache,target=/root/.cache/pip pip3 install --user -r ./requirements/base_package.txt
RUN --mount=type=cache,target=/root/.cache/pip pip3 install --user -r ./requirements/base_others.txt
RUN --mount=type=cache,target=/root/.cache/pip pip3 install --user -r ./requirements/base_others2.txt
RUN --mount=type=cache,target=/root/.cache/pip pip3 install --user -r ./requirements/base_others3.txt
RUN --mount=type=cache,target=/root/.cache/pip pip3 install --user -r ./requirements/base_others4.txt
RUN pip3 install attrs==23.1.0
RUN pip3 install --user ./Installation_ref/libraries/djangocodemirror-2.1.0-py2.py3-none-any.whl
#RUN cp ./Installation_ref/libraries/binary_callers.py /root/.local/lib/python3.10/site-packages/bcpy
RUN mkdir -pv "/opt/mssql-tools/bin"
RUN ln -s /opt/mssql-tools18/bin/bcp /opt/mssql-tools/bin/bcp
#WORKDIR /root/.local/lib/python3.10/site-packages/pyarrow
#RUN ln -s libarrow.so.900 libarrow.so
#RUN ln -s libarrow_python.so.900 libarrow_python.so
RUN pip install --user pybind11==2.10.4
RUN --mount=type=cache,target=/root/.cache/pip pip install --user --no-cache-dir turbodbc==4.8.0

ARG BUILD_ID
ARG COMMIT_SHA
ARG REVOLUTIO_IMAGE_DATE_CREATED

##############################################################################################
# This is the actual Revolutio image - much smaller than the build one. We copy
# installed Revolutio and all it's dependencies from the build image to make it smaller.
##############################################################################################
FROM ${PYTHON_BASE_IMAGE} as main
SHELL ["/bin/bash", "-o", "pipefail", "-e", "-u", "-x", "-c"]

ARG REVOLUTIO_UID
ARG PYTHON_BASE_IMAGE
ARG REVOLUTIO_PIP_VERSION
ARG REVOLUTIO_VERSION

ENV PYTHON_BASE_IMAGE=${PYTHON_BASE_IMAGE} \
    REVOLUTIO_VERSION=${REVOLUTIO_VERSION} \
    # Make sure noninteractive debian install is used and language variables set
    DEBIAN_FRONTEND=noninteractive LANGUAGE=C.UTF-8 LANG=C.UTF-8 LC_ALL=C.UTF-8 \
    LC_CTYPE=C.UTF-8 LC_MESSAGES=C.UTF-8 \
    REVOLUTIO_PIP_VERSION=${REVOLUTIO_PIP_VERSION}

# Install curl and gnupg2 - needed for many other installation steps
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
           curl \
           gnupg2 \
           software-properties-common \
    && apt-get autoremove -yqq --purge \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ARG RUNTIME_APT_DEPS="\
        apt-transport-https \
        apt-utils \
        libboost-all-dev \
        ca-certificates \
        gnupg \
        gosu \
        ldap-utils \
        libldap-common \
        libsasl2-2 \
        libsasl2-modules \
        locales  \
        lsb-release \
        netcat-traditional \
        openssh-client \
        sasl2-bin \
        unixodbc \
        gdb \
        pkg-config \
        libxmlsec1 \
        libxml2-dev \
        libxmlsec1-dev \
        libxmlsec1-openssl \
        build-essential \
        libgl1-mesa-glx \
        chromium \
        libpangocairo-1.0-0 \
        alien \
        libaio1 \
        libgomp1"

ARG ADDITIONAL_RUNTIME_APT_DEPS=""
ARG RUNTIME_APT_COMMAND="echo"
ARG ADDITIONAL_RUNTIME_APT_COMMAND=""
ARG ADDITIONAL_RUNTIME_APT_ENV=""
ARG INSTALL_MSSQL_CLIENT="true"
ARG REVOLUTIO_USER_HOME_DIR=/home/revolutio
ARG REVOLUTIO_HOME
# Having the variable in final image allows to disable providers manager warnings when
# production image is prepared from sources rather than from package
ARG BUILD_ID
ARG COMMIT_SHA
ARG REVOLUTIO_IMAGE_DATE_CREATED
# By default PIP will install everything in ~/.local
ARG PIP_USER="true"

ENV RUNTIME_APT_DEPS=${RUNTIME_APT_DEPS} \
    ADDITIONAL_RUNTIME_APT_DEPS=${ADDITIONAL_RUNTIME_APT_DEPS} \
    RUNTIME_APT_COMMAND=${RUNTIME_APT_COMMAND} \
    ADDITIONAL_RUNTIME_APT_COMMAND=${ADDITIONAL_RUNTIME_APT_COMMAND} \
    INSTALL_MSSQL_CLIENT=${INSTALL_MSSQL_CLIENT} \
    REVOLUTIO_UID=${REVOLUTIO_UID} \
    REVOLUTIO_USER_HOME_DIR=${REVOLUTIO_USER_HOME_DIR} \
    REVOLUTIO_HOME=${REVOLUTIO_HOME} \
    PATH="${REVOLUTIO_USER_HOME_DIR}/.local/bin:${PATH}" \
    GUNICORN_CMD_ARGS="--worker-tmp-dir /dev/shm" \
    BUILD_ID=${BUILD_ID} \
    COMMIT_SHA=${COMMIT_SHA} \
    PIP_USER=${PIP_USER}

# Note missing man directories on debian-buster
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199
# Install basic and additional apt dependencies
RUN mkdir -pv /usr/share/man/man1 \
    && mkdir -pv /usr/share/man/man7 \
    && export ${ADDITIONAL_RUNTIME_APT_ENV?} \
    && bash -o pipefail -e -u -x -c "${RUNTIME_APT_COMMAND}" \
    && bash -o pipefail -e -u -x -c "${ADDITIONAL_RUNTIME_APT_COMMAND}" \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
           ${RUNTIME_APT_DEPS} \
           ${ADDITIONAL_RUNTIME_APT_DEPS} \
    && apt-get autoremove -yqq --purge \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update \
    && apt-get install -y libxrender-dev

#RUN R -e "install.packages(c('betareg','caret','leaps','lmtest','car','forecast','fitdistrplus','logspline','gvlma','tseries','ResourceSelection','survey','pscl','ROCR','LDPD'), repos = 'http://cran.us.r-project.org')"


# Only copy install_m(y/s)sql and install_pip_version.sh. We do not need any other scripts in the final image.
COPY /Installation_ref/scripts/install_mssql.sh /Installation_ref/scripts/install_pip_version.sh /Installation_ref/scripts/entrypoint /Installation_ref/scripts/start /Installation_ref/scripts/start-initial-deployment /Installation_ref/scripts/cdn-push \
   /Installation_ref/scripts/

COPY /rqworker/start /rqworker/start-scheduler /rqworker/start-scheduler-system /rqworker/start-computation-0 /rqworker/start-computation-1 /rqworker/start-data-upload-0 /rqworker/start-tenant /rqworker/start-navbar /rqworker/start-alerts /rqworker/

RUN sed -i 's/\r$//g' /Installation_ref/scripts/entrypoint && \
    sed -i 's/\r$//g' /Installation_ref/scripts/start && \
    sed -i 's/\r$//g' /Installation_ref/scripts/start-initial-deployment && \
    sed -i 's/\r$//g' /Installation_ref/scripts/cdn-push && \
    sed -i 's/\r$//g' /rqworker/start && \
    sed -i 's/\r$//g' /rqworker/start-scheduler && \
    sed -i 's/\r$//g' /rqworker/start-scheduler-system && \
    sed -i 's/\r$//g' /rqworker/start-computation-0 && \
    sed -i 's/\r$//g' /rqworker/start-computation-1 && \
    sed -i 's/\r$//g' /rqworker/start-data-upload-0 && \
    sed -i 's/\r$//g' /rqworker/start-tenant && \
    sed -i 's/\r$//g' /rqworker/start-alerts && \
    sed -i 's/\r$//g' /rqworker/start-navbar

RUN chmod +x /Installation_ref/scripts/entrypoint && \
    chmod +x /Installation_ref/scripts/start && \
    chmod +x /Installation_ref/scripts/start-initial-deployment && \
    chmod +x /Installation_ref/scripts/cdn-push && \
    chmod +x /rqworker/start && \
    chmod +x /rqworker/start-scheduler && \
    chmod +x /rqworker/start-scheduler-system && \
    chmod +x /rqworker/start-computation-0 && \
    chmod +x /rqworker/start-computation-1 && \
    chmod +x /rqworker/start-data-upload-0 && \
    chmod +x /rqworker/start-tenant && \
    chmod +x /rqworker/start-alerts && \
    chmod +x /rqworker/start-navbar

# fix permission issue in Azure DevOps when running the scripts
RUN chmod a+x /Installation_ref/scripts/install_mssql.sh && \
    /Installation_ref/scripts/install_mssql.sh && \
    adduser --quiet "revolutio" --uid "${REVOLUTIO_UID}" --gid "0" --home "${REVOLUTIO_USER_HOME_DIR}" && \
    mkdir -pv "${REVOLUTIO_HOME}"; \
    mkdir -pv "${REVOLUTIO_HOME}/logs"; \
    mkdir -pv "${REVOLUTIO_HOME}/static"; \
    mkdir -pv "${REVOLUTIO_HOME}/media"; \
    chown -R "revolutio:root" "${REVOLUTIO_USER_HOME_DIR}" "${REVOLUTIO_HOME}"; \
    find "${REVOLUTIO_HOME}" -executable -print0 | xargs --null chmod g+x && \
        find "${REVOLUTIO_HOME}" -print0 | xargs --null chmod g+rw

RUN apt-get update && apt-get install -y --no-install-recommends alien libaio1 wget && \
    wget https://download.oracle.com/otn_software/linux/instantclient/1920000/oracle-instantclient19.20-basic-19.20.0.0.0-1.x86_64.rpm && \
    wget https://download.oracle.com/otn_software/linux/instantclient/1920000/oracle-instantclient19.20-devel-19.20.0.0.0-1.x86_64.rpm && \
    alien -i oracle-instantclient19.20-basic-19.20.0.0.0-1.x86_64.rpm && \
    alien -i oracle-instantclient19.20-devel-19.20.0.0.0-1.x86_64.rpm

ENV LD_LIBRARY_PATH="/usr/lib/oracle/19.2/client64/lib:${LD_LIBRARY_PATH}"

COPY --chown=revolutio:root --from=revolutio-build-image /root/.local "${REVOLUTIO_USER_HOME_DIR}/.local"
COPY --chown=revolutio:root . "${REVOLUTIO_HOME}/"

RUN apt-get purge --auto-remove -y software-properties-common linux-libc-dev curl libcurl4 && rm -rf /var/lib/apt/lists/*

RUN chmod +rwx /etc/ssl/openssl.cnf
RUN sed -i 's/TLSv1.2/TLSv1/g' /etc/ssl/openssl.cnf
RUN sed -i 's/SECLEVEL=2/SECLEVEL=1/g' /etc/ssl/openssl.cnf

RUN chmod g=u /etc/passwd && \
    bash Installation_ref/scripts/install_pip_version.sh

WORKDIR ${REVOLUTIO_HOME}

EXPOSE 5000

RUN usermod -g 0 revolutio -G 0

USER ${REVOLUTIO_UID}

ENV DUMB_INIT_SETSID="1"

WORKDIR ${REVOLUTIO_HOME}

ENTRYPOINT ["/Installation_ref/scripts/entrypoint"]